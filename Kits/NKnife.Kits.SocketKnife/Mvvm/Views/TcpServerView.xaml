<xcad:LayoutDocument x:Class="NKnife.Kits.SocketKnife.Mvvm.Views.TcpServerView"
                     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                     xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                     xmlns:xcad="http://schemas.xceed.com/wpf/xaml/avalondock"
                     mc:Ignorable="d" Title="SocketKnife服务端">
    <Grid Name="_View" Loaded="View_OnLoaded">
        <Grid.Resources>
            <Style x:Key="StartButtonImage" TargetType="{x:Type Button}">
                <Setter Property="Margin" Value="3" />
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Image Source="/Attachments/start-unable.png" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="True">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Image Source="/Attachments/start.png" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="RenderTransform">
                            <Setter.Value>
                                <RotateTransform Angle="45" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
                        <Setter Property="Background" Value="#FF0CC030" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="StopButtonImage" TargetType="{x:Type Button}">
                <Setter Property="Margin" Value="3" />
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Image Source="/Attachments/stop-unable.png" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="True">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Image Source="/Attachments/stop.png" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="RenderTransform">
                            <Setter.Value>
                                <RotateTransform Angle="45" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
                        <Setter Property="Background" Value="#FF0CC030" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Grid.Resources>
        
        <Grid.Background>
            <SolidColorBrush Color="{StaticResource {x:Static SystemColors.ControlLightColorKey}}" />
        </Grid.Background>
        
        <Grid.RowDefinitions>
            <RowDefinition Height="34" />
            <RowDefinition Height="*" />
            <RowDefinition Height="26" />
        </Grid.RowDefinitions>
        <ToolBar Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Center">
            <Button Click="Start" Name="_StartButton" Style="{StaticResource StartButtonImage}" />
            <Button Click="Stop" Name="_StopButton" IsEnabled="False" Style="{StaticResource StopButtonImage}" />
        </ToolBar>
        <StatusBar Grid.Row="2" HorizontalAlignment="Left" VerticalAlignment="Center">
        </StatusBar>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="400"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <DataGrid Grid.Column="0" Margin="1,1,3,1" ItemsSource="{Binding SocketMessages}" AutoGenerateColumns="False" IsReadOnly="True"
                      HorizontalGridLinesBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" 
                      VerticalGridLinesBrush="{DynamicResource {x:Static SystemColors.ControlBrushKey}}">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="时间" Binding="{Binding Path=Time, Mode=OneWay}" Width="90" />
                    <DataGridTextColumn Binding="{Binding Path=SocketDirection, Mode=OneWay}" Width="60" />
                    <DataGridTextColumn Header="命令字" Binding="{Binding Path=Command, Mode=OneWay}" Width="160" />
                    <DataGridTextColumn Header="数据" Binding="{Binding Path=Message, Mode=OneWay}" Width="*" />
                </DataGrid.Columns>
            </DataGrid>
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="260"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0" Margin="0,1,3,1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="24"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                        <RowDefinition Height="24"></RowDefinition>
                        <RowDefinition Height="24"></RowDefinition>
                        <RowDefinition Height="30"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Button Grid.Row="0" Name="_BuildProtocolButton" Content="协议生成" Click="_BuildProtocolButton_OnClick"></Button>
                    <TextBox Grid.Row="1" Name="_ProtocolTextBox" Margin="0,2,0,0"></TextBox>
                    <CheckBox Grid.Row="2" Name="_SelectAllClientCheckBox" Content="全部客户端" Margin="0,3,0,0" Click="_SelectAllClientCheckBox_OnClick" />
                    <StackPanel Grid.Row="3" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
                        <RadioButton Name="_OnlyOnceRadioButton" Content="仅一次" IsChecked="{Binding Path=IsOnlyOnce, Mode=TwoWay}" Margin="3,3,7,3"></RadioButton>
                        <RadioButton Name="_FixTimeRadioButton" Content="定时间隔" IsChecked="{Binding Path=IsFixTime, Mode=TwoWay}" Margin="3,3,4,0"></RadioButton>
                        <TextBox Name="_FixTimeTextBox" Margin="0,0,5,0" Width="45" IsEnabled="False" Text="{Binding Path=FixTime, Mode=TwoWay}"></TextBox>
                        <RadioButton Name="_RandomTimeRadioButton" Content="随机间隔" IsChecked="{Binding Path=IsRandomTime, Mode=TwoWay}" Margin="3,3,4,3"></RadioButton>
                        <TextBox Name="_RandomMinTimeTextBox" Margin="0,0,0,0" Width="45" IsEnabled="False" Text="{Binding Path=RandomMinTime, Mode=TwoWay}"></TextBox>
                        <TextBlock Text=" ~ " Margin="-1,3"></TextBlock>
                        <TextBox Name="_RandomMaxTimeTextBox" Margin="0,0,2,0" Width="45" IsEnabled="False" Text="{Binding Path=RandomMaxTime, Mode=TwoWay}"></TextBox>
                    </StackPanel>
                    <StackPanel Grid.Row="4" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
                        <Button Name="_StopReplayButton" Content="停止" Width="60" Margin="3,0" IsEnabled="False" Click="_StopReplayButton_OnClick"></Button>
                        <Button Name="_StartReplayButton" Content="回复" Width="60" Margin="3,0,0,0" IsEnabled="False" Click="_StartReplayButton_OnClick"></Button>
                    </StackPanel>
                </Grid>
                <DataGrid Grid.Row="1" Name="_SessionDataGrid" Margin="0,7,3,1" AutoGenerateColumns="False"
                          CanUserAddRows="False" CanUserDeleteRows="True"
                          HorizontalGridLinesBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" 
                          VerticalGridLinesBrush="{DynamicResource {x:Static SystemColors.ControlBrushKey}}">
                    <DataGrid.Columns>
                        <!--为了可以单击选中，用模板的方式重新定义-->
                        <DataGridTemplateColumn Width="30">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <CheckBox IsChecked="{Binding Path=IsSelected, Mode=TwoWay}" />
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn Header="客户端" Binding="{Binding Path=EndPoint, Mode=OneWay}" IsReadOnly="True" Width="*" />
                        <DataGridTemplateColumn Header="自动回复" Width="65">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <CheckBox IsChecked="{Binding Path=EnableAutoReplay, Mode=TwoWay}" />
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </Grid>
    </Grid>
</xcad:LayoutDocument>