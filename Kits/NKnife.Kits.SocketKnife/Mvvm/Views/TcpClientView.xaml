<xcad:LayoutDocument x:Class="NKnife.Kits.SocketKnife.Mvvm.Views.TcpClientView"
                     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                     xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                     xmlns:xcad="http://schemas.xceed.com/wpf/xaml/avalondock"
                     xmlns:common="clr-namespace:NKnife.Kits.SocketKnife.Common"
                     mc:Ignorable="d">
    <Grid Name="_View">
        <Grid.Resources>
            <common:ProtocolConverter x:Key="ProtocolConverter" />
            <Style x:Key="StartButtonImage" TargetType="{x:Type Button}">
                <Setter Property="Margin" Value="3" />
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Image Source="/Attachments/start-unable.png" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="True">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Image Source="/Attachments/start.png" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="RenderTransform">
                            <Setter.Value>
                                <RotateTransform Angle="45" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
                        <Setter Property="Background" Value="#FF0CC030" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="PauseButtonImage" TargetType="{x:Type Button}">
                <Setter Property="Margin" Value="3" />
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Image Source="/Attachments/pause-unable.png" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="True">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Image Source="/Attachments/pause.png" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="RenderTransform">
                            <Setter.Value>
                                <RotateTransform Angle="45" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
                        <Setter Property="Background" Value="#FF0CC030" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="StopButtonImage" TargetType="{x:Type Button}">
                <Setter Property="Margin" Value="3" />
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Image Source="/Attachments/stop-unable.png" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="True">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Image Source="/Attachments/stop.png" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="RenderTransform">
                            <Setter.Value>
                                <RotateTransform Angle="45" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
                        <Setter Property="Background" Value="#FF0CC030" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Grid.Resources>
        <Grid.Background>
            <SolidColorBrush Color="{StaticResource {x:Static SystemColors.ControlLightColorKey}}" />
        </Grid.Background>
        <Grid.RowDefinitions>
            <RowDefinition Height="34" />
            <RowDefinition Height="*" />
            <RowDefinition Height="26" />
        </Grid.RowDefinitions>
        <ToolBar Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Center">
            <Button Click="Start" Name="_StartButton" Style="{StaticResource StartButtonImage}" />
            <Button Click="Stop" Name="_StopButton" IsEnabled="False" Style="{StaticResource StopButtonImage}" />
        </ToolBar>
        <StatusBar Grid.Row="2" HorizontalAlignment="Left" VerticalAlignment="Center" />
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="7*" />
                <ColumnDefinition Width="3*" />
            </Grid.ColumnDefinitions>
            <DataGrid Grid.Column="0" Margin="1,1,3,1" ItemsSource="{Binding SocketMessages}"
                      AutoGenerateColumns="False" IsReadOnly="True"
                      HorizontalGridLinesBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"
                      VerticalGridLinesBrush="{DynamicResource {x:Static SystemColors.ControlBrushKey}}">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="时间" Binding="{Binding Path=Time, Mode=OneWay}" Width="90" />
                    <DataGridTextColumn Binding="{Binding Path=SocketDirection, Mode=OneWay}" Width="60" />
                    <DataGridTextColumn Header="命令字" Binding="{Binding Path=Command, Mode=OneWay}" Width="160" />
                    <DataGridTextColumn Header="数据" Binding="{Binding Path=Message, Mode=OneWay}" Width="*" />
                </DataGrid.Columns>
            </DataGrid>
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="330" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid Grid.Row="0" Margin="0,1,3,1">
                    <Rectangle Grid.RowSpan="5" Stroke="#FF646FA8" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                    <Grid Margin="5,4,5,2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="24" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="24" />
                            <RowDefinition Height="66" />
                            <RowDefinition Height="30" />
                        </Grid.RowDefinitions>
                        <Button Grid.Row="0" Name="_BuildProtocolButton" Content="协议生成" Click="_BuildProtocolButton_OnClick" />
                        <TextBox Grid.Row="1" Name="_ProtocolTextBox" Margin="0,2,0,0" Text="{Binding Path=CurrentProtocol, Converter={StaticResource ProtocolConverter}, Mode=OneWay}" />
                        <CheckBox Grid.Row="2" Name="_SelectAllClientCheckBox" Content="全部客户端" Margin="0,3,0,0" Click="_SelectAllClientCheckBox_OnClick" />
                        <StackPanel Grid.Row="3" Orientation="Vertical" HorizontalAlignment="Right" VerticalAlignment="Center" Height="Auto">
                            <RadioButton Name="_OnlyOnceRadioButton" IsChecked="{Binding Path=IsOnlyOnce, Mode=TwoWay}" Margin="0,2" VerticalAlignment="Center">
                                <TextBlock VerticalAlignment="Center">仅一次</TextBlock>
                            </RadioButton>
                            <RadioButton Name="_FixTimeRadioButton" IsChecked="{Binding Path=IsFixTime, Mode=TwoWay}" Margin="0,2" VerticalAlignment="Center">
                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Height="22">
                                    <TextBlock VerticalAlignment="Center">定时间隔</TextBlock>
                                    <TextBox Name="_FixTimeTextBox" Margin="5,0" Height="20" Width="45" IsEnabled="False" Text="{Binding Path=FixTime, Mode=TwoWay}" VerticalAlignment="Center"/>
                                </StackPanel>
                            </RadioButton>
                            <RadioButton Name="_RandomTimeRadioButton" IsChecked="{Binding Path=IsRandomTime, Mode=TwoWay}" Margin="0,2" VerticalAlignment="Center">
                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Height="22">
                                    <TextBlock VerticalAlignment="Center">随机间隔</TextBlock>
                                    <TextBox Name="_RandomMinTimeTextBox" Margin="5,0,0,0" Height="20" Width="45" IsEnabled="False" Text="{Binding Path=RandomMinTime, Mode=TwoWay}" VerticalAlignment="Center" />
                                    <TextBlock Text=" ~ " VerticalAlignment="Center" Margin="-1,3" />
                                    <TextBox Name="_RandomMaxTimeTextBox" Margin="0,0,2,0" Height="20" Width="45" IsEnabled="False" Text="{Binding Path=RandomMaxTime, Mode=TwoWay}" VerticalAlignment="Center" />
                                </StackPanel>
                            </RadioButton>
                        </StackPanel>
                        <StackPanel Grid.Row="4" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
                            <Button Name="_StopReplayButton" Content="停止" Width="60" Margin="3,0" IsEnabled="False" Click="_StopReplayButton_OnClick" />
                            <Button Name="_StartReplayButton" Content="回复" Width="60" Margin="3,0,0,0" IsEnabled="False" Click="_StartReplayButton_OnClick" />
                        </StackPanel>
                    </Grid>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</xcad:LayoutDocument>